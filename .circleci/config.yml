version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3  
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@1.3.0

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  lint-app:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint  

  build-push-docker-image:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: build and push docker image
          command: |
            docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
            docker build --tag=cloud_devops_capstone .
            docker image ls
            docker tag cloud_devops_capstone ${DOCKER_USERNAME}/cloud_devops_capstone
            docker push ${DOCKER_USERNAME}/cloud_devops_capstone

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            echo "capstone cluster testing!"
            kubectl get services
            kubectl get pods
            kubectl describe pods
            kubectl get nodes
            kubectl get deployment
            kubectl get services -o wide
          name: Test cluster

  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: capstonecluster

    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''      
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: capstonecluster
          node-type: t3.medium
          show-eksctl-command: true

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployments/nginx.yaml
          resource-name: deployments/kjcapstone
      - kubernetes/create-or-update-resource:
          resource-file-path: deployments/app.yaml

workflows:
  deployment:
    jobs:
      #- lint-app
      # - build-push-docker-image:
      #     requires:
      #     - lint-app
      # - create-cluster:
      #     cluster-name: capstonecluster
      #     requires:
      #       - build-push-docker-image
      - create-deployment:
          cluster-name: capstonecluster
          # requires:
          #   - create-cluster
      - aws-eks/update-container-image:
          cluster-name: capstonecluster
          container-image-updates: kjcapstone=${DOCKER_USERNAME}/cloud_devops_capstone
          post-steps:
              - kubernetes/delete-resource:
                  resource-names: kjcapstone
                  resource-types: deployment
                  wait: true            
          record: true
          resource-name: deployment/kjcapstone
          requires:
            - create-deployment 
      - test-cluster:
          cluster-name: capstonecluster
          requires: 
            - aws-eks/update-container-image                                      
      